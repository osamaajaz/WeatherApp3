
# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
from sklearn.metrics import confusion_matrix

# Load the Iris dataset
iris = load_iris()
X = iris.data
y = iris.target
target_names = iris.target_names

# Apply KMeans clustering
kmeans = KMeans(n_clusters=3, random_state=42, n_init=10)  # Added n_init for sklearn > v1.2
kmeans.fit(X)
y_kmeans = kmeans.labels_

# Evaluate clustering (unsupervised, so label matching might not align perfectly)
print("Confusion Matrix (cluster vs actual labels):")
print(confusion_matrix(y, y_kmeans))

# Reduce dimensions for visualization using PCA
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X)

# Plot clustering result
plt.figure(figsize=(8, 6))
colors = ['red', 'green', 'blue']
for i in range(3):
    plt.scatter(X_pca[y_kmeans == i, 0], X_pca[y_kmeans == i, 1], 
                label=f"Cluster {i}", color=colors[i], edgecolor='k')

plt.title('K-Means Clustering of Iris Dataset')
plt.xlabel('PCA Component 1')
plt.ylabel('PCA Component 2')
plt.legend()
plt.grid(True)
plt.show()
